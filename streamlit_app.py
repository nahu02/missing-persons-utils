import logging
import asyncio
import streamlit as st
from datetime import datetime, timedelta
import io
import pandas as pd

from collect_missing import scrape_missing_persons

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[logging.FileHandler("missing-persons.log"), logging.StreamHandler()],
)

# Page configuration
st.set_page_config(
    page_title="Elt≈±nt Szem√©lyek",
    page_icon="üîç",
    layout="wide",
)

st.title("üîç Elt≈±nt Szem√©ly Keres≈ë")
st.write("""
    Ez az alkalmaz√°s a [Rend≈ërs√©g weboldal√°r√≥l](https://www.police.hu/hu/koral/eltunt-szemelyek) gy≈±jt adatokat az elt≈±nt szem√©lyekr≈ël
    √©s r√©szletes inform√°ci√≥kat jelen√≠t meg r√≥luk.
""")

# Calculate default min birth date (12 years ago from today)
default_min_birth_date = (datetime.now() - timedelta(days=365.25 * 12)).strftime(
    "%Y-%m-%d"
)

# Sidebar for search filters
with st.sidebar:
    st.header("Keres√©si Felt√©telek")

    name = st.text_input("N√©v", value="", help="Sz≈±r√©s n√©v alapj√°n")
    birth_place = st.text_input(
        "Sz√ºlet√©si Hely", value="", help="Sz≈±r√©s sz√ºlet√©si hely alapj√°n"
    )

    birth_date_min = st.date_input(
        "Sz√ºlet√©si D√°tum (minimum)",
        datetime.strptime(default_min_birth_date, "%Y-%m-%d"),
        help="Sz≈±r√©s minimum sz√ºlet√©si d√°tum alapj√°n (alap√©rtelmezett: 12 √©ve)",
    )

    use_max_date = st.checkbox("Sz√ºlet√©si D√°tum (maximum) be√°ll√≠t√°sa", value=False)
    birth_date_max = None
    if use_max_date:
        birth_date_max = st.date_input(
            "Sz√ºlet√©si D√°tum (maximum)",
            datetime.now(),
            help="Sz≈±r√©s maximum sz√ºlet√©si d√°tum alapj√°n",
        )

    search_button = st.button(
        "Elt≈±nt Szem√©lyek Keres√©se", type="primary", use_container_width=True
    )

    st.info(
        "Megjegyz√©s: A keres√©s t√∂bb percig is eltarthat a tal√°latok sz√°m√°t√≥l f√ºgg≈ëen."
    )

# Main content area
if search_button:
    # Convert dates to string format for API
    min_birth_date_str = birth_date_min.strftime("%Y-%m-%d")
    max_birth_date_str = birth_date_max.strftime("%Y-%m-%d") if use_max_date else ""

    progress_placeholder = st.empty()

    with st.spinner(
        "Adatok lek√©rdez√©se a Rend≈ërs√©g weboldal√°r√≥l. Ez eltarthat egy ideig..."
    ):
        try:
            # Create a progress display
            progress_container = progress_placeholder.container()
            progress_container.text("Keres√©s ind√≠t√°sa...")

            # Execute the async function
            df = asyncio.run(
                scrape_missing_persons(
                    name=name,
                    birth_place=birth_place,
                    birth_date_min=min_birth_date_str,
                    birth_date_max=max_birth_date_str,
                )
            )

            # Clear progress display when done
            progress_placeholder.empty()

            if df.empty:
                st.warning("Nem tal√°lhat√≥ eredm√©ny a megadott felt√©telekkel.")
            else:
                st.success(
                    f"A keres√©si felt√©telek alapj√°n tal√°ltam {len(df)} elt≈±nt szem√©lyt."
                )

                # Display data
                st.subheader("Eredm√©nyek")

                st.dataframe(df, use_container_width=True, hide_index=True)

                # Add download button

                # Create a BytesIO buffer for Excel file
                buffer = io.BytesIO()
                with pd.ExcelWriter(buffer, engine="xlsxwriter") as writer:
                    df.to_excel(writer, index=False)
                buffer.seek(0)

                st.download_button(
                    "Let√∂lt√©s Excel f√°jlk√©nt",
                    buffer,
                    f"eltunt-szemelyek_{datetime.now().strftime('%Y-%m-%d')}_min-szuletes-{min_birth_date_str}.xlsx",
                    "application/vnd.ms-excel",
                    key="download-excel",
                    icon="‚¨áÔ∏è",
                )

        except Exception as e:
            st.error(f"Hiba a keres√©s sor√°n: {e}")
            logging.error(f"Error in Streamlit app: {e}")
else:
    st.info(
        "Add meg a keres√©si felt√©teleket a bal oldali s√°vban, majd kattints az 'Elt≈±nt Szem√©lyek Keres√©se' gombra!"
    )
